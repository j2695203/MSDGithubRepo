{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue255;\red0\green0\blue255;\red255\green255\blue255;
\red34\green45\blue53;}
{\*\expandedcolortbl;;\cssrgb\c1680\c19835\c100000;\cssrgb\c1680\c19835\c100000;\cssrgb\c100000\c100000\c100000;
\cssrgb\c17647\c23137\c27059;}
\margl1440\margr1440\vieww12240\viewh14440\viewkind1
\deftab720
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\ri0\partightenfactor0

\f0\fs24 \cf0 Lab 4 Worksheet\
\
Answer the following questions by modifying this text file. Add your answer below each question.\
\
\
1. Which two binarySearch tests are failing?\
\cf2 The second and third one.\cf0 \
\
2. What are the values of arr and goal passed in to binary search?\
\cf2 arr = [1, 2, 3, 4, 5]; goal = 2;\cf0 \
\
3. For each of the two cases of binarySearch that are failing, which return statements are they executing in error (is it returning true when it should be returning false, or the other way around)?\
\cf2 For second one: mid=(low+high)/2 becomes 0 when it should be 1.5, and it causes goal = mid and returns true which is wrong.\
For third one: while(low<=high) stops searching for remaining numbers in the array.\cf0 \
\
4. What is the bug in binarySearch? How do you fix it?\
\cf2 The goal should be compared with the value of determined index rather than just index.\
For every comparison condition with goal, switch the index into value[index]. For example, switch if( goal == mid ) into \cf3 if( goal == arr[mid] ).\cf0 \
\
5. Which loops appear to be inifinite?\
\cf2 Loop #2 and #4.\cf0 \
\
6. For the loops that you found to be infinite, briefly explain why they are never progressing.\
\cf2 For loop #2: b is always 0, so it is infinite for while( b < 10 ).\
For loop #4: f is always 5 or 6, so it is infinite for while( f > 0 ). \cf0 \
\
7. What does the call to password.split(" ") appear to do? Hint: examine the input value of "password", then examine the items in the "tokens" array returned by the call.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\ri0\partightenfactor0
\cf2 password.split(" ") \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 returns an array of Strings separated by spaces in the input password String.\cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\ri0\partightenfactor0
\cf0 \
8. What is the correct password?\
\cf2 \'931 4 9 16 25\'94}